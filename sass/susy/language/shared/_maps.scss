// Map Toolkit
// ===========

// Truncate List
// -------------
// - Return a list, truncated to a given length
@function truncate-list(
  $list,
  $length
) {
  $fn-return: ();

  @for $i from 1 through length($list) {
    $fn-return: if($i <= $length, append($fn-return, nth($list, $i)), $fn-return);
  }

  @return $fn-return;
}

// Deep Get
// --------
// - Return a value deep in nested maps
@function deep-get(
  $map,
  $keys...
) {
  $fn-return: $map;

  @each $key in $keys {
    @if type-of($fn-return) == map {
      $fn-return: map-get($fn-return, $key);
    }
  }

  @return $fn-return;
}

// Deep Set
// --------
// - Set a value deep in nested maps
@function deep-set(
  $map,
  $keys,
  $value
) {
  $fn-length: length($keys);
  $fn-return: ();

  @for $i from 1 through $fn-length {
    $fn-n: 0 - $i;
    $fn-level: truncate-list($keys, $fn-length + $fn-n);
    $fn-level: deep-get($map, $fn-level...);
    $fn-merge: (nth($keys, $fn-n): $value);
    $fn-return: if($fn-level, map-merge($fn-level, $fn-merge), $fn-merge);
    $value: $fn-return;
  }

  @return $fn-return;
}

// Deep Has-Key
// ------------
// - Return true if a deep key exists
@function deep-has-key(
  $map,
  $keys...
) {
  $fn-return: null;
  $fn-stop: false;

  @each $key in $keys {
    @if not $fn-stop {
      $fn-return: map-has-key($map, $key);
    }

    @if $fn-return {
      $map: map-get($map, $key);
    } @else {
      $fn-stop: true;
    }
  }

  @return $fn-return;
}
