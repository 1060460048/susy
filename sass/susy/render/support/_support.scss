// Browser Support
// ===============

// Susy Support Defaults
// ---------------------
@include susy-defaults((
  use-custom: (
    clearfix: false,
    background-image: true,
    background-options: false,
    box-sizing: true,
    rem: true,
  ),
));


// Susy Support [mixin]
// --------------------
// Send property-value pairs to the proper support modules.
// - $prop  : <css property>
// - $val   : <css value>
@mixin susy-support(
  $prop,
  $val
) {
  @if $prop == background-image {
    @include susy-background-image($val);
  } @else if $prop == background-size {
    @include susy-background-size($val);
  } @else if $prop == background-origin {
    @include susy-background-origin($val);
  } @else if $prop == background-clip {
    @include susy-background-clip($val);
  } @else if $prop == box-sizing {
    @include susy-box-sizing($val);
  } @else if $prop == clearfix {
    @include susy-clearfix;
  } @else {
    @include susy-rem($prop, $val);
  }
}


// Susy Support [function]
// -----------------------
// Check for support of a feature.
// - $feature       : <string>
//                    - e.g "rem" or "box-sizing"
// - $requirements  : <map>
//                    - e.g (variable: rem-with-px-fallback, mixin: rem)
// - $warn          : <bool>
@function susy-support(
  $feature,
  $requirements: (),
  $warn: true
) {
  $-support: susy-get(use-custom $feature);

  @if $-support {
    $-fail: false;

    @each $-type, $-req in $requirements {
      @each $-i in $-req {
        $-pass: call(#{$-type}-exists, $-i);

        @if not $-pass {
          $-fail: true;
          @if $warn {
            @warn "You requested custom support for #{$feature}, but the #{$-i} #{$-type} is not available.";
          }
        }
      }
    }

    $-support: if($-fail, false, $-support);
  }

  @return $-support;
}
