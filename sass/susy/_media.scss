// ---------------------------------------------------------------------------
// Responsive Layout Settings

// create any variables you want to reflect different breakpoints, layouts,
// or breakpoint/layout pairs!
// $small-breakpoint  : 30em;
// $small-layout      : 8;
// $small             : small-breakpoint $small-layout;

// ---------------------------------------------------------------------------
// Internal Layout Functions

@function medialayout(
  $media-layout,
  $split  : false
) {
  $media  : false;
  $layout : false;
  $return : false;

  @if (type-of($media-layout) == 'list') {
    // This is where I add some magic to distinguish between the two values
    // so that you can send them in either order.
    $media  : nth($media-layout,1);
    $layout : nth($media-layout,2);
    $return : $media-layout;
  } @else {
    @warn "you need to pass a list... at least for now.";
  }

  @if ($split == 'media') {
    $return: $media;
  } @else {
    @if ($split == 'layout') {
      $return: $layout;
    }
  }

  @return $return;
}

// ---------------------------------------------------------------------------
// Layout Mixins


// Layout
// $layout-cols : set the (unitless) number of columns to use for this layout.
@mixin layout(
  $layout-cols
) {
  // store default $total-cols setting for later, then change it.
  $default-layout : $total-cols;
  $total-cols     : $layout-cols;

  // apply children in this new layout context.
  @content;

  // return to default $total-cols setting.
  $total-cols     : $default-layout;
}

// At-Breakpoint
// $media-layout : a pair of values
// - one is a length (em, px, etc) representing the @media breakpoint to apply.
// - one is a unitless number representing the number of columns to use in this new layout context.
@mixin at-breakpoint(
  $media-layout
) {
  $media  : medialayout($media-layout,media);
  $layout : medialayout($media-layout,layout);

  @media all and (min-width: $media) {
    @include layout($layout) {
      @content;
    }
  }
}
