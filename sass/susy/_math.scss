// ---------------------------------------------------------------------------
// Global math variables
// this is the language that is passed into the math functions, not nessisarily user-facing.

$context: 960px, 100%, 40em !default;
$columns: 12 !default;
$gutter: 10px !default;
$margin: 10px !default;

// ---------------------------------------------------------------------------
// Columns & Context

// Return the number of columns in a given grid.
//
// column-count($columns)
// - $columns   : <intiger> | <list>
//              - unitless integer represents symmetric column count.
//              - list represents set of asymmetric column ratios.
@function column-count(
  $columns
) {
  @if type-of($columns) == number {
    @return $columns;
  }
  @if type-of($columns) == list {
    @return length($columns);
  }
}

// Find context
@function find-context($columns, $guter, $margin) {

  // If auto columns exist, context needs to be calculated.
  @if query-list($columns, auto) != false or length(columns) == 1 {
    @return nth($context, nth(query-list($context, unit($gutter), unit), 1));
  }
  @else {

    // Find sum of columns
    $column-sum: list-sum($columns);

    // Find sum of gutters
    $gutter-sum: $gutter * (column-count($columns) - 1);

    // Find sum of margin
    $margin-sum: list-sum($margin);
    @if type-of($margin) == number {
      $margin-sum: $margin * 2;
    }

    @return $column-sum + $gutter-sum + $margin-sum;
  }
}

// ---------------------------------------------------------------------------
// Grid Span

// Just find the width of a portion of the grid.
//
// column-count($columns)
// - $span      : <intiger>
// - $location  : <intiger>
//              - location on the grid where a span begins. Only nessisary for non-uniform columns.
// - $columns   : <intiger> | <list>
//              - unitless integer represents symmetric column count.
//              - list represents set of asymmetric column ratios.
// - $gutter    : <value>
//              - A value comparable to the context or columns.
// - $margin    : <value>
//              - A value comparable to the context or columns.
@function grid-span-width($span, $location, $columns, $gutter, $margin) {
  
}


// VARIABLES ARE PLACEHOLDERS UNTIL PROPER GIRD PARSING CAN BE DONE
// SYNTAX SUBJECT TO CHANGE
@function grid-span($string) {
  // Identify @media context.
  
  // Parse variables out of context and the mixin string.
  
  // Write name-spaced local variables from the context defined above.
  // $grid-span-span     : $span
  // $grid-span-location : $location
  // $grid-span-columns  : $columns
  // $grid-span-gutter   : $gutter
  // $grid-span-margin   : $margin

  // Return the width based on those parsed values.
  // @return grid-span-width($grid-span-span, $grid-span-location, $grid-span-columns, $grid-span-gutter, $grid-span-margin);
}





































