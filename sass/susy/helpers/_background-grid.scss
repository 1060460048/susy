@import "compass/css3/images";

@mixin background-grid($columns: false, $gutter: false, $color1: rgba(#E3CDA4, .5), $color2: rgba(#C77966, .5)) {

  $background-length: length($grids);

  @if not ($columns) {
    @for $i from 1 through $background-length {
      @if $i == 1 {
        @include background-build($columns, $gutter, $color1, $color2);
      }
      @else {
        $mq: nth(nth($grids, $i), 2);

        $grid: nth(nth($grids, $i), 1);
        @include breakpoint($mq) {
          @include background-build($grid, $gutter, $color1, $color2);
        }
      }
    }
  }
}

@mixin background-build($columns, $gutter, $color1, $color2) {
  $columns: find-grid($columns);
  $gutter: find-gutter($gutter);

  $stops: background-gradient-stops($columns, $gutter, $color1, $color2);

  @include background(
    linear-gradient(
      left, $stops
    )
  );
}

//////////////////////////////
// Get the stops of the gradient
//////////////////////////////
@function background-gradient-stops($columns, $gutter, $color1, $color2) {
  $bkg: ();
  $count: column-count($columns);

  @for $i from 1 through column-count($columns) {
    $bkg: join($bkg, background-column-gradient($i, $columns, $gutter, $color1, $color2), comma);
  }

  @return $bkg;
}

//////////////////////////////
// Get the columns
//////////////////////////////
@function background-column-gradient($location, $columns, $gutter, $color1, $color2) {

  @if $location == 1 {
    @return $color1 0%, $color2 column-span(1, 1, $columns), transparentize($color1, 1) column-span(1, 1, $columns);
  }
  @if $location == column-count($columns) {
    @return transparentize($color1, 1) column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color1 column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color2 100%;
  }
  @if $location > 1 {
    @return transparentize($color1, 1) column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color1 column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color2 column-span($location, 1, $columns), transparentize($color1, 1) column-span($location, 1, $columns);
  }
}

//////////////////////////////
// Add a switch
//////////////////////////////
@mixin background-grid-switch($horz: bottom, $vert: left, $columns: false, $gutter: false, $color1: rgba(#E3CDA4, .5), $color2: rgba(#C77966, .5)) {

  head {
    display: block;
    position: fixed;
    #{$horz}: 10px;
    #{$vert}: 10px;
    color: #333;
    background: #eee;
    border: 0;
    border-#{$vert}: 3px solid #D84A38;
    box-shadow: inset 0 1px 8px rgba(0, 0, 0, 0.25);
  }
  head::before {
    content: "||||";
    font-family: sans-serif;
    padding: 10px 14px;
    display: block;
  }
  head:hover::after {
    content: " ";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    height: auto;
    width: auto;
    @include background-grid($columns, $gutter, $color1, $color2);
  }

}
