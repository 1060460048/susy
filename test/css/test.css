/* Susy Tests */
/* ========== */
/*  

### Column Math ------ */
/*  - [function] is-symmetrical() (3 assertions, 3 passed, 0 failed) */
/*  - [function] column-count() (2 assertions, 2 passed, 0 failed) */
/*  - [function] symmetrical column-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] asymmetrical column-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] symmetrical get-columns() (1 assertions, 1 passed, 0 failed) */
/*  - [function] asymmetrical get-columns() (1 assertions, 1 passed, 0 failed) */
/*  - [function] symmetrical get-column-span-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] asymmetrical get-column-span-sum() (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 8 Tests
    - 8 Passed
    - 0 Failed */
/*  

### Container Math ------ */
/*  FAIL: [function] parse-container-position (6 assertions, 4 passed, 2 failed) */
/*  - [function] calculate-container-width (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 2 Tests
    - 1 Passed
    - 1 Failed */
/*  

### Location Math ------ */
/*  - [function] is-last (5 assertions, 5 passed, 0 failed) */
/*  - [function] is-first (5 assertions, 5 passed, 0 failed) */
/*  - [function] get-location-position (5 assertions, 5 passed, 0 failed) */
/*  
    Summary:
    - 3 Tests
    - 3 Passed
    - 0 Failed */
/*  

### Direction Helpers ------ */
/*  - [function] get-direction (4 assertions, 4 passed, 0 failed) */
/*  - [function] to (2 assertions, 2 passed, 0 failed) */
/*  - [function] from (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 3 Tests
    - 3 Passed
    - 0 Failed */
/*  

### Nth- Helpers ------ */
/*  - [function] format-nth (5 assertions, 5 passed, 0 failed) */
/*  
    Summary:
    - 1 Tests
    - 1 Passed
    - 0 Failed */
/*  

### Sass List Helpers ------ */
/*  - [function] list-sum (1 assertions, 1 passed, 0 failed) */
/*  - [function] query-list (3 assertions, 3 passed, 0 failed) */
/*  - [function] reverse (3 assertions, 3 passed, 0 failed) */
/*  - [function] filter (2 assertions, 2 passed, 0 failed) */
/*  - [function] nth-filter (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 5 Tests
    - 5 Passed
    - 0 Failed */
/*  

### Shared Grid-Settings Language ------ */
/*  - Original-Grid Helpers (23 assertions, 23 passed, 0 failed) */
/*  - [mixin] set-grid (33 assertions, 33 passed, 0 failed) */
/*  - [mixin] use-grid (55 assertions, 55 passed, 0 failed) */
/*  - [function] get-grid (24 assertions, 24 passed, 0 failed) */
/*  - [function] parse-grid (2 assertions, 2 passed, 0 failed) */
/*  - [function] get-setting (10 assertions, 10 passed, 0 failed) */
/*  
    Summary:
    - 6 Tests
    - 6 Passed
    - 0 Failed */
/*  

### Shared Context Language ------ */
/*  - [function] nested (3 assertions, 3 passed, 0 failed) */
/*  - [mixin] nested (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 2 Tests
    - 2 Passed
    - 0 Failed */
/*

### Shared Grid Background API ------ */
/* - [mixin] grid-background-output (ltr)

EXPECT:
.ltr-grid-background-output {
  background: linear-gradient(left, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%), linear-gradient(bottom, rgba(0, 0, 0, 0.5) 5%, rgba(0, 0, 0, 0) 5%);
  background: linear-gradient(to right, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%), linear-gradient(bottom, rgba(0, 0, 0, 0.5) 5%, rgba(0, 0, 0, 0) 5%);
  background-size: 100% 24px;
  background-position: left top;
}

*/
.ltr-grid-background-output {
  background: linear-gradient(left, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%);
}

/* - [mixin] grid-background-ouput (rtl)

EXPECT:
.rtl-grid-background-output {
  background: linear-gradient(right, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%), linear-gradient(bottom, rgba(0, 0, 0, 0.5) 5%, rgba(0, 0, 0, 0) 5%);
  background: linear-gradient(to left, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%), linear-gradient(bottom, rgba(0, 0, 0, 0.5) 5%, rgba(0, 0, 0, 0) 5%);
  background-size: 100% 24px;
  background-position: left top;
}
*/
.rtl-grid-background-output {
  background: linear-gradient(left, #ff0000 30%, rgba(0, 0, 255, 0.5) 50%);
}
