/* Susy Tests */
/* ========== */
/*  

### Column Math ------ */
/*  - [function] is-symmetrical() (3 assertions, 3 passed, 0 failed) */
/*  - [function] column-count() (2 assertions, 2 passed, 0 failed) */
/*  - [function] symmetrical column-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] asymmetrical column-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] symmetrical get-columns() (1 assertions, 1 passed, 0 failed) */
/*  - [function] asymmetrical get-columns() (1 assertions, 1 passed, 0 failed) */
/*  - [function] symmetrical get-column-span-sum() (2 assertions, 2 passed, 0 failed) */
/*  - [function] asymmetrical get-column-span-sum() (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 8 Tests
    - 8 Passed
    - 0 Failed */
/*  

### Container Math ------ */
/*  - [function] parse-container-position (6 assertions, 6 passed, 0 failed) */
/*  - [function] calculate-container-width (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 2 Tests
    - 2 Passed
    - 0 Failed */
/*  

### Location Math ------ */
/*  - [function] is-last (5 assertions, 5 passed, 0 failed) */
/*  - [function] is-first (5 assertions, 5 passed, 0 failed) */
/*  - [function] get-location-position (5 assertions, 5 passed, 0 failed) */
/*  
    Summary:
    - 3 Tests
    - 3 Passed
    - 0 Failed */
/*  

### Direction Helpers ------ */
/*  - [function] get-direction (4 assertions, 4 passed, 0 failed) */
/*  - [function] to (2 assertions, 2 passed, 0 failed) */
/*  - [function] from (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 3 Tests
    - 3 Passed
    - 0 Failed */
/*  

### Nth- Helpers ------ */
/*  - [function] format-nth (5 assertions, 5 passed, 0 failed) */
/*  
    Summary:
    - 1 Tests
    - 1 Passed
    - 0 Failed */
/*  

### Sass List Helpers ------ */
/*  - [function] list-sum (1 assertions, 1 passed, 0 failed) */
/*  - [function] query-list (3 assertions, 3 passed, 0 failed) */
/*  - [function] reverse (3 assertions, 3 passed, 0 failed) */
/*  - [function] filter (2 assertions, 2 passed, 0 failed) */
/*  - [function] nth-filter (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 5 Tests
    - 5 Passed
    - 0 Failed */
/*  

### Settings Syntax ------ */
/*  - [Test Helper] Original Grid (2 assertions, 2 passed, 0 failed) */
/*  - [mixin] set-grid (10 assertions, 10 passed, 0 failed) */
/*  - [mixin] use-grid (6 assertions, 6 passed, 0 failed) */
/*  - [function] get-grid (3 assertions, 3 passed, 0 failed) */
/*  - [function] parse-grid (44 assertions, 44 passed, 0 failed) */
/*  - [function] get-adjusted-grid (44 assertions, 44 passed, 0 failed) */
/*  - [function] get-setting (13 assertions, 13 passed, 0 failed) */
/*  
    Summary:
    - 7 Tests
    - 7 Passed
    - 0 Failed */
/*  

### Shared Context Language ------ */
/*  - [function] nested (3 assertions, 3 passed, 0 failed) */
/*  - [mixin] nested (2 assertions, 2 passed, 0 failed) */
/*  
    Summary:
    - 2 Tests
    - 2 Passed
    - 0 Failed */
/*  

### Grid Background Syntax ------ */
/*  - [function] get-grid-color-stops (4 assertions, 4 passed, 0 failed) */
/*  
    Summary:
    - 1 Tests
    - 1 Passed
    - 0 Failed */
/*  

### Container Syntax ------ */
/*  - [function] container (5 assertions, 5 passed, 0 failed) */
/*  - [function] get-container-width (5 assertions, 5 passed, 0 failed) */
/*  
    Summary:
    - 2 Tests
    - 2 Passed
    - 0 Failed */
/*  

### Span Syntax ------ */
/*  - [function] span (5 assertions, 5 passed, 0 failed) */
/*  - [function] parse-span (66 assertions, 66 passed, 0 failed) */
/*  - [function] get-span-setting (13 assertions, 13 passed, 0 failed) */
/*  - [function] get-span-width (6 assertions, 6 passed, 0 failed) */
/*  - [function] span-math (9 assertions, 9 passed, 0 failed) */
/*  
    Summary:
    - 5 Tests
    - 5 Passed
    - 0 Failed */
/*  

### Gutter Syntax ------ */
/*  - [function] gutter (5 assertions, 5 passed, 0 failed) */
/*  - [function] get-gutter-width (2 assertions, 2 passed, 0 failed) */
/*  - [function] get-gutters (6 assertions, 6 passed, 0 failed) */
/*  
    Summary:
    - 3 Tests
    - 3 Passed
    - 0 Failed */
/*  

### Isolation Syntax ------ */
/*  - [function] get-isolation (3 assertions, 3 passed, 0 failed) */
/*  
    Summary:
    - 1 Tests
    - 1 Passed
    - 0 Failed */
/*  

### Gallery Syntax ------ */
/*  
    Summary:
    - 0 Tests
    - 0 Passed
    - 0 Failed */
/*  

### Row Syntax ------ */
/*  
    Summary:
    - 0 Tests
    - 0 Passed
    - 0 Failed */
/*

### Margin Syntax ------ */
/* - [mixin] pre */
/* "Items should have 3-columns margin before." */
.test__pre .assert__pre .test {
  margin-left: 45%;
}
.test__pre .assert__pre .expect {
  margin-left: 45%;
}

/* - [mixin] post */
/* "Items should have 2-columns margin after." */
.test__post .assert__post .test {
  margin-right: 35%;
}
.test__post .assert__post .expect {
  margin-right: 35%;
}

/* - [mixin] push */
/* "Items should have 2-columns margin before." */
.test__push .assert__push .test {
  margin-left: 35%;
}
.test__push .assert__push .expect {
  margin-left: 35%;
}

/* - [mixin] pull */
/* "Items should pull 1-column, overlapping the spacer." */
.test__pull .assert__pull .test {
  margin-left: -22.5%;
}
.test__pull .assert__pull .expect {
  margin-left: -22.5%;
}

/* - [mixin] squish */
/* "Items should have 2-columns margin before and after." */
.test__squish .assert__simple .test {
  margin-left: 35%;
  margin-right: 35%;
}
.test__squish .assert__simple .expect {
  margin-left: 35%;
  margin-right: 35%;
}

/* "Items should have 1-column margin before, and 2 after - nested." */
.test__squish .assert__nested .test {
  margin-left: 15%;
  margin-right: 30%;
}
.test__squish .assert__nested .expect {
  margin-left: 15%;
  margin-right: 30%;
}

/*

### Padding Syntax ------ */
/* - [mixin] prefix */
/* "Items should have 3 columns padding before." */
.test__prefix .assert__prefix .test {
  padding-left: 45%;
}
.test__prefix .assert__prefix .expect {
  padding-left: 45%;
}

/* - [mixin] suffix */
/* "Items should have 2 columns padding after." */
.test__suffix .assert__suffix .test {
  padding-right: 35%;
}
.test__suffix .assert__suffix .expect {
  padding-right: 35%;
}

/* - [mixin] pad */
/* "Items should have 2 columns padding before and after." */
.test__pad .assert__simple .test {
  padding-left: 35%;
  padding-right: 35%;
}
.test__pad .assert__simple .expect {
  padding-left: 35%;
  padding-right: 35%;
}

/* "Items should have 1 column padding before, and 2 after - nested." */
.test__pad .assert__nested .test {
  padding-left: 15%;
  padding-right: 30%;
}
.test__pad .assert__nested .expect {
  padding-left: 15%;
  padding-right: 30%;
}

/*

### Shared Container API ------ */
/* - [mixin] container-output */
/* "Containers should have 60em max-width, centered." */
.test__container-output .assert__fluid .test {
  max-width: 60em;
  margin-left: auto;
  margin-right: auto;
}
.test__container-output .assert__fluid .expect {
  max-width: 60em;
  margin-left: auto;
  margin-right: auto;
}

/* "Containers should have 30em width, flush right." */
.test__container-output .assert__static .test {
  width: 30em;
  margin-left: auto;
  margin-right: 0;
}
.test__container-output .assert__static .expect {
  width: 30em;
  margin-left: auto;
  margin-right: 0;
}

/*

### Float Container API ------ */
/* - [mixin] float-container */
/* "Containers should be 30em wide, flush left." */
.test__float-container .assert__float-container .test {
  max-width: 30em;
  margin-left: 0;
  margin-right: auto;
}
.test__float-container .assert__float-container .test:after {
  content: "";
  display: table;
  clear: both;
}
.test__float-container .assert__float-container .expect {
  max-width: 30em;
  margin-left: 0;
  margin-right: auto;
}
.test__float-container .assert__float-container .expect:after {
  content: "";
  display: table;
  clear: both;
}

/*

### Float Span API ------ */
/* - [mixin] float-span-output */
/* "Output should be 25%, floated left, with matching margins/padding" */
.test__float-span-output .assert__full .test {
  width: 25%;
  float: left;
  margin-left: 5em;
  margin-right: 2em;
  padding-left: 3em;
  padding-right: 4em;
}
.test__float-span-output .assert__full .expect {
  width: 25%;
  float: left;
  margin-left: 5em;
  margin-right: 2em;
  padding-left: 3em;
  padding-right: 4em;
}

/* "Output should be 25%, floated right" */
.test__float-span-output .assert__float-to .test {
  width: 25%;
  float: right;
}
.test__float-span-output .assert__float-to .expect {
  width: 25%;
  float: right;
}

/* "Output should be 25%, not floated" */
.test__float-span-output .assert__float-null .test {
  width: 25%;
}
.test__float-span-output .assert__float-null .expect {
  width: 25%;
}

/*

### Float End API ------ */
/* - [mixin] float-last */
/* "Items should float flush right." */
.test__float-last .assert__float-last .test {
  float: right;
  margin-right: 0;
}
.test__float-last .assert__float-last .expect {
  float: right;
  margin-right: 0;
}

/* - [mixin] float-first */
/* "Items should float flush left." */
.test__float-first .assert__float-first .test {
  margin-left: 0;
}
.test__float-first .assert__float-first .expect {
  margin-left: 0;
}

/*

### Isolation API ------ */
/* - [mixin] isolate-output */
/* "Isolation at 30%, has 30% left margin and -100% right margin." */
.test__isolate-output .assert__isolate-output .test {
  margin-left: 30%;
  margin-right: -100%;
}
.test__isolate-output .assert__isolate-output .expect {
  margin-left: 30%;
  margin-right: -100%;
}
