// Grids Syntax
// ============

@include test-module('Grids Syntax') {

  // [mixin] set-grid
  // ----------------

  @include test('[mixin] set-grid') {
    $grid: 960px inside border-box;

    // original change
    @include set-grid($grid);

    @include assert-equal(susy-get(container), 960px,
      'New container setting should be "960px"');
    @include assert-equal(susy-get(columns), susy-get(columns, $susy-defaults),
      'New columns setting should still be the default');
    @include assert-equal(susy-get(box-sizing), border-box,
      'New box-sizing should be "border-box"');
    @include assert-equal(susy-get(gutter-position), inside,
      'New gutter-position should be "inside"');

    @include set-grid(12);

    @include assert-equal(susy-get(container), 960px,
      'New container setting should remain "960px"');
    @include assert-equal(susy-get(columns), 12,
      'New columns setting should be "12"');
    @include assert-equal(susy-get(box-sizing), border-box,
      'New box-sizing should remain "border-box"');

    @include original-grid;
  }

  // [mixin] use-grid
  // ----------------

  @include test('[mixin] use-grid') {
    @include set-grid((
      columns: 4,
      container: 960px
    ));

    @include assert-equal(susy-get(columns), 4,
      'Start with 4 columns, before use-grid');
    @include assert-equal(susy-get(container), 960px,
      'Start with 960px container, before use-grid');

    @include use-grid(auto 12) {
      @include assert-equal(susy-get(columns), 12,
        'Switch to 12 columns, inside use-grid');
      @include assert-equal(susy-get(container), auto,
        'Switch to auto container, inside use-grid');
    }

    @include assert-equal(susy-get(columns), susy-get(columns, $susy-defaults),
      'End with 4 columns, after use-grid');
    @include assert-equal(susy-get(container), 960px,
      'End with 960px container, after use-grid');

    @include original-grid;
  }
}
