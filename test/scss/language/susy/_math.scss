// Susy Math
// =========

@include test-module('Syntax Math') {

  // get-span-width
  // --------------

  @include test('[function] get-span-width') {
    // explicit
    $span: 30%;
    $width: get-span-width($span);
    @include assert-equal($width, $span,
      'The width of an explicit "30%" span should be "30%"');

    // relative
    $span: 5;
    $cols: 7;
    $guts: .5;
    $width: get-span-width($span, 1, $cols, $guts);
    @include assert-equal($width, 70%,
      'The relative width for "5 of 7 .5" should be "70%"');

    // relative inside-gutters
    $span: 4;
    $cols: 8;
    $guts: .25;
    $width: get-span-width($span, 1, $cols, $guts, null, fluid, inside);
    @include assert-equal($width, 50%,
      'The relative width for "4 of 8 .25 inside" should be "50%"');

    // static
    $span: 5;
    $cols: 7;
    $guts: .5;
    $width: get-span-width($span, 1, $cols, $guts, 4em, static);
    @include assert-equal($width, 28em,
      'The static width for "5 of 7 (4em 2em)" should be "28em"');

    // static inside-gutters
    $span: 4;
    $cols: 8;
    $guts: .25;
    $width: get-span-width($span, 1, $cols, $guts, 4em, static, inside);
    @include assert-equal($width, 20em,
      'The static width for "4 of 8 .25 inside" should be "20em"');

    // outer
    $span: 5;
    $cols: 7;
    $guts: .5;
    $width: get-span-width($span, 1, $cols, $guts, $outer: outer);
    @include assert-equal($width, 75%,
      'The outer width for "5 of 7 .5" should be "75%"');
  }

  // get-gutter-width
  // ----------------

  @include test('[function] get-gutter-width') {
    $cols: 1 2 3 2 1;
    $guts: .25;

    // static
    $gutter: get-gutter-width($cols, $guts, 40px, static);
    $expect: 10px;
    @include assert-equal($gutter, $expect,
      'The static gutter-width of "(40px 10px)" should be "10px"');

    // relative
    $gutter: get-gutter-width($cols, $guts);
    $expect: 2.5%;
    @include assert-equal($gutter, $expect,
      'The static gutter-width of "(1 2 3 2 1) .25" should be "2.5%"');
  }

  // get-gutters
  // -----------

  @include test('[function] get-gutters') {
    $cols: 7;
    $guts: .5;

    // override before
    $test: get-gutters($cols, $guts, false, fluid, before, 30%);
    $expect: 30% null;
    @include assert-equal($test, $expect,
      'A "30% before" gutter should return "30% null" gutters');

    // override after
    $test: get-gutters($cols, $guts, false, fluid, after, 2em);
    $expect: null 2em;
    @include assert-equal($test, $expect,
      'A "2em after" gutter should return "null 2em" gutters');

    // override inside
    $test: get-gutters($cols, $guts, false, fluid, inside, 15px);
    $expect: 15px 15px;
    @include assert-equal($test, $expect,
      'A "15px inside" gutter should return "15px 15px" gutters');

    // before
    $test: get-gutters($cols, $guts, $gutter-position: before);
    $expect: 5% null;
    @include assert-equal($test, $expect,
      'A relative gutter from "7 .5 before" should return "5% null" gutters');

    // after
    $test: get-gutters($cols, $guts, $gutter-position: after);
    $expect: null 5%;
    @include assert-equal($test, $expect,
      'A relative gutter from "7 .5 after" should return "null 5%" gutters');

    // split
    $test: get-gutters($cols, $guts, $gutter-position: split);
    $expect: 2.5% 2.5%;
    @include assert-equal($test, $expect,
      'A relative gutter from "7 .5 split" should return "2.5% 2.5%" gutters');
  }

  // span math
  // ---------

  @include test('[function] span-math') {
    // after
    $span: span-math(5, 2, 7, .5, 4em, float, fluid, ltr, after);
    $expect: 70% left null 5% null null ltr;
    @include assert-equal($span, $expect,
      'The span output for "5 at 2 of 7 .5" should be "#{$expect}"');

    // inside (padding)
    $span: span-math(5, 2, 7, .5, 4em, float, fluid, ltr, inside, false);
    $padding: nth($span, 5) nth($span, 6);
    $expect: 2.5% 2.5%;
    @include assert-equal($padding, $expect,
      'The padding for "5 at 2 of 7 .5 inside" should be "#{$expect}"');

    // inside container (padding)
    $span: span-math(5, 2, 7, .5, 4em, float, fluid, ltr, inside, container);
    $padding: nth($span, 5) nth($span, 6);
    $expect: null null;
    @include assert-equal($padding, $expect,
      'The padding for any "inside container" should be "#{$expect}"');

    // isolate (margins)
    $span: span-math(3, 5, 7, .5, 4em, isolate, fluid, ltr, after);
    $margins: nth($span, 3) nth($span, 4);
    $expect: 60% -100%;
    @include assert-equal($margins, $expect,
      'The margins for "3 at 5 of 7 .5 isolate" should be "#{$expect}"');

    // after last (margins)
    $span: span-math(3, 5, 7, .5, 4em, float, static, ltr, after);
    $margins: nth($span, 3) nth($span, 4);
    $float: nth($span, 2);
    $expect: null null;
    @include assert-equal($margins, $expect,
      'The margins for "last after" should be "#{$expect}"');

    @include assert-equal($float, right,
      'The float for "last after" should be "right');

    // before first (margins)
    $span: span-math(3, 1, (1 2 3 2 1), .5, 4em, float, static, ltr, before);
    $margins: nth($span, 3) nth($span, 4);
    $expect: null null;
    @include assert-equal($margins, $expect,
      'The margins for "first before" should be "#{$expect}"');
  }
}
