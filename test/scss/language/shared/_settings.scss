// Grid Syntax Tests
// =================

// reset the original grid
@mixin original-grid {
  $susy: $susy-defaults !global;
}

// test the output of a parsed grid
@mixin test-parsed-grid($name, $test, $expect) {
  @each $setting in $susy-defaults {
    $this-test: susy-get($test, $name);
    $this-expect: susy-get($expect, $name);
    @include assert-equal($this-test, $this-expect,
      '[#{$name}] #{$setting} should be #{$this-expect}');
  }
}

// Tests
// -----

@include test-module('Settings Syntax') {

  // [mixin] set-grid
  // ----------------

  @include test('[mixin] set-grid') {
    $grid: 960px inside border-box;

    // original change
    @include set-grid($grid);

    @include assert-equal(susy-get(container), 960px,
      'New container setting should be "960px"');
    @include assert-equal(susy-get(columns), susy-get(columns, $susy-defaults),
      'New columns setting should still be the default');
    @include assert-equal(susy-get(box-sizing), border-box,
      'New box-sizing should be "border-box"');
    @include assert-equal(susy-get(gutter-position), inside,
      'New gutter-position should be "inside"');

    @include set-grid(12);

    @include assert-equal(susy-get(container), 960px,
      'New container setting should remain "960px"');
    @include assert-equal(susy-get(columns), 12,
      'New columns setting should be "12"');
    @include assert-equal(susy-get(box-sizing), border-box,
      'New box-sizing should remain "border-box"');

    @include original-grid;
  }

  // [mixin] use-grid
  // ----------------

  @include test('[mixin] use-grid') {
    @include set-grid((
      columns: 4,
      container: 960px
    ));

    @include assert-equal(susy-get(columns), 4,
      'Start with 4 columns, before use-grid');
    @include assert-equal(susy-get(container), 960px,
      'Start with 960px container, before use-grid');

    @include use-grid(auto 12) {
      @include assert-equal(susy-get(columns), 12,
        'Switch to 12 columns, inside use-grid');
      @include assert-equal(susy-get(container), auto,
        'Switch to auto container, inside use-grid');
    }

    @include assert-equal(susy-get(columns), susy-get(columns, $susy-defaults),
      'End with 4 columns, after use-grid');
    @include assert-equal(susy-get(container), 960px,
      'End with 960px container, after use-grid');

    @include original-grid;
  }

  // [function] parse-grid
  // ---------------------

  @include test('[function] parse-grid') {
    // Grid #1
    $grid: 960px 9 .25 static before show float right ltr;
    $test: parse-grid($grid);
    $expect: (
      columns: 9,
      gutters: 0.25,
      container: 960px,
      layout-math: static,
      layout-method: float,
      container-position: right,
      flow: ltr,
      gutter-position: before,
      show-grids: show,
    );

    @include test-parsed-grid('parse-grid: #1', $test, $expect);

    // Grid #2
    $grid: auto (1 2 3 2 1) (4em 1em) fluid isolate show-columns border-box left rtl after;
    $test: parse-grid($grid);
    $expect: (
      columns: (1 2 3 2 1),
      gutters: 0.25,
      container: auto,
      column-width: 4em,
      layout-math: fluid,
      layout-method: isolate,
      container-position: left,
      flow: rtl,
      gutter-position: after,
      show-grids: show-columns,
      box-model: border-box,
    );

    @include test-parsed-grid('parse-grid: #2', $test, $expect);

    // Grid #3
    $grid: center split content-box hide;
    $test: parse-grid($grid);
    $expect: (
      container-position: center,
      gutter-position: split,
      show-grids: hide,
      box-model: content-box,
    );

    @include test-parsed-grid('parse-grid: #3', $test, $expect);

    // Grid #4
    $grid: inside show-baseline;
    $test: parse-grid($grid);
    $expect: (
      gutter-position: inside,
      show-grids: show-baseline,
    );

    @include test-parsed-grid('parse-grid: #4', $test, $expect);

    // Grid #5
    $grid: inside-static;
    $test: parse-grid($grid);
    $expect: (
      gutter-position: inside-static
    );

    @include test-parsed-grid('parse-grid: #5', $test, $expect);
  }

  // [function] get-setting
  // ----------------------

  @include test('[function] get-setting') {
    $grid: 960px 4 1/4 right border-box float fluid before show-columns rtl;
    $pre: parse-grid($grid);

    $a: susy-get(box-sizing, $grid);
    $b: susy-get(box-sizing, $pre);

    // parsing
    @include assert-equal($a, $b,
      'Get-setting should be the same whether pre-parsed or not');

    // border-box
    @include assert-equal($a, border-box,
      'Box-sizing of "#{$grid}" should be "border-box"');

    // columns
    $test: susy-get(columns, $pre);
    $expect: 4;
    @include assert-equal($test, $expect,
      'Columns of "#{$grid}" should be "#{$expect}"');

    // gutters
    $test: susy-get(gutters, $pre);
    $expect: 1/4;
    @include assert-equal($test, $expect,
      'Gutters of "#{$grid}" should be "#{$expect}"');

    // container
    $test: susy-get(container, $pre);
    $expect: 960px;
    @include assert-equal($test, $expect,
      'Container of "#{$grid}" should be "#{$expect}"');

    // column-width
    $test: susy-get(column-width, $pre);
    $expect: false;
    @include assert-equal($test, $expect,
      'Column-width of "#{$grid}" should be "#{$expect}"');

    // layout-method
    $test: susy-get(layout-method, $pre);
    $expect: float;
    @include assert-equal($test, $expect,
      'Isolate of "#{$grid}" should be "#{$expect}"');

    // layout-math
    $test: susy-get(layout-math, $pre);
    $expect: fluid;
    @include assert-equal($test, $expect,
      'Static of "#{$grid}" should be "#{$expect}"');

    // flow
    $test: susy-get(flow, $pre);
    $expect: rtl;
    @include assert-equal($test, $expect,
      'Static of "#{$grid}" should be "#{$expect}"');

    // container-position
    $test: susy-get(container-position, $pre);
    $expect: right;
    @include assert-equal($test, $expect,
      'Static of "#{$grid}" should be "#{$expect}"');

    // gutter-position
    $test: susy-get(gutter-position, $pre);
    $expect: before;
    @include assert-equal($test, $expect,
      'Static of "#{$grid}" should be "#{$expect}"');

    // show-grids
    $test: susy-get(show-grids, $pre);
    $expect: show-columns;
    @include assert-equal($test, $expect,
      'Static of "#{$grid}" should be "#{$expect}"');

    // auto container
    $grid: auto;
    $test: susy-get(container, $grid);
    $expect: auto;
    @include assert-equal($test, $expect,
      'Container of "#{$grid}" should be "#{$expect}"');
  }

}
